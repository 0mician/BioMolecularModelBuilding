qnorm(0.95)
pnorm(0.025)
pnorm(1.96)
qnorm(0.975)
?t.test
?p.t
?pt
install.packages("FactoMineR")
library(FactoMineR)
data('decathlon')
installed.packages("swirl")
install.package("swirl")
install.packages("swirl")
?subset
?type
dataset("LobLolly")
datasets("LobLolly")
?dataset
?load
?loblolly
data()
data("Loblolly")
ls
ls()
str(Loblolly)
lobseed=subset(Loblolly,Seed>311,select=Seed)
View(lobseed)
View(lobseed)
lobseed=subset(Loblolly,as.numeric(Seed)>311,select=Seed)
View(lobseed)
View(lobseed)
View(Loblolly)
lobseed=subset(Loblolly,Seed>311,select=Seed)
View(lobseed)
as.vector.factor(Loblolly$Seed)
Loblolly$test <- as.vector.factor(Loblolly$Seed)
View(Loblolly)
View(Loblolly)
lobseed=subset(Loblolly,test>311,select=test)
View(lobseed)
View(lobseed)
ls()
a = 5
rm(a)
ls()
installed.packages()
remove.packages(FactoMineR)
remove.packages("FactoMineR")
installed.packages()
install.packages("FactoMineR")
library(FactoMineR)
data()
data(decathlon)
View(decathlon)
str(decathlon)
ls()
temperature <- read.table(file=file.choose(), header=TRUE)
str(temperature)
names(temperature)
View(temperature)
golub <- read.table(file=file.choose(), header=TRUE)
View(golub)
View(golub)
rm(golub)
with(temperature, mean(October))
with(temperature, summary(October))
with(temperature, by(October, Area, summary))
with(temperature, median(October))
with(temperature, by(October, Area, median))
q1 <- with(temperature, quantile(October, 0.25))
q1
?quantile
with(temperature, var(October))
with(temperature, sd(October))
sqrt(with(temperature, var(October)))
with(temperature, IQR(October))
beer = scan()
table(beer)
?table
str(beer)
str(table(beer))
barplot(tbale(beer), xlan = "beer", ylab= "freq", main = "cheers!")
barplot(table(beer), xlan = "beer", ylab= "freq", main = "cheers!")
barplot(table(beer), xlab = "beer", ylab= "freq", main = "cheers!")
barplot(table(beer), xlab = "beer", ylab= "freq", main = "cheers!")
barplot(beer, xlab = "beer", ylab= "freq", main = "cheers!")
lab_beer <- c('bottle', 'microbrew', 'can', 'import')
bp <- barplot(table(beer)/length(beer), xlab = "beer", ylab = "freq")
text(bp, table(beer), labels = lab_beer, pos = 1)
text(bp, table(beer), labels = lab_beer, pos = 1)
bp <- barplot(table(beer), xlab = "beer", ylab = "freq")
text(bp, table(beer), labels = lab_beer, pos = 1)
bp <- barplot(table(beer)/length(beer), xlab = "beer", ylab = "freq")
text(bp, table(beer), labels = lab_beer, pos = 1)
barplot(beer, xlab = "beer", ylab= "freq", main = "cheers!")
bp <- barplot(table(beer), xlab = "beer", ylab = "freq")
text(bp, table(beer), labels = lab_beer, pos = 1)
Party <- c("EUL", "PES", "EFA", "EDD", "ELDR", "EPP", "UEN", "Other")
Seats <- c(39, 200, 42, 15, 67, 276, 27, 66)
length(Party)
length(Seats)
?data.frame
election <- data.frame(Party, Seats)
View(election)
names()
names(election)
str(election)
pie(election, main = "Results election")
pie(election$seats, main = "Results election")
pie(election$Seats, main = "Results election")
pie(election$Seats, main = "Results election", col = gray(c(0.6,0.8,0.9,0.4,0.5,0.6,0.1,0.2)))
?pie
pie(election$Seats, labels = names(election$Party), main = "Results election", col = gray(c(0.6,0.8,0.9,0.4,0.5,0.6,0.1,0.2)))
pie(election$Seats, labels = Party, main = "Results election", col = gray(c(0.6,0.8,0.9,0.4,0.5,0.6,0.1,0.2)))
dotchart(Seats)
?dotcharts
?dotchart
dotchart(Seats, labels = Party)
scores=cbind(c(12,13,11,15,11,12,16,11,10,8,18,19,11,13,14,11,12,16),c(11,12,14,13,13,12,14,10,12,7,19,16,14,12,11,10,11,17),c(14,15,14,16,17,13,12,14,17,18,11,15,17,19,11,14,15,16))
hist(scores[,1])
hist(scores[,2])
hist(scores[,3])
hist(scores[,1])
hist(scores[,1], breaks = 'scott')
?hist
?breaks
hist(scores[,1], probability = 'T')
hist((scores[,1]), probability = 'T')
hist((scores[,1]), probability = 'T')
lines(density(scores[,1]))
boxplot(scores)
boxplot(scores, xlab = c("math", "history","english"))
boxplot(scores, labels = c("math", "history", "english"))
?boxplot
boxplot(scores, names = c("math", "history", "english"))
plot(ecdf(scores[,1]))
plot(scores[,1], scores[,2])
hist((scores[,1]), probability = 'T')
lines(density(scores[,1]))
?density
k <- c(0:3)
densbin <- dbinom(k, 3, 0.25)
densbin
pbinom(k,3,0.25)
golub <- read.table(file = file.choose(), header = 'FALSE')
golub <- read.table(file = file.choose(), header = 'F')
golub <- read.table(file = file.choose(), header = FALSE)
View(golub)
cnames(golub, c("Leukemia", "Value"))
cname(golub, c("Leukemia", "Value"))
?cnmaes
?cnames
?names
names(golub) <- c("Leukemia", "Value")
str(golub)
View(golub)
dbinm(47, 72, 0.68)
dbinom(47, 72, 0.68)
?pnorm
?diff
pnorm(c(-3,3))
diff(pnorm(c(-3,3)))
conf <- 0.95
sigma <- 1.5
n <- 9
xmean <- with(temperature, mean(October))
alpha<- 1 - conf
lcl <- xmean  - qnorm(1 - alpha/2) * sigma/sqrt(n)
lcl
xmean
xmean <- with(temperature, mean(westT$October))
wsetT <- subset(temperature, Area = "West")
View(wsetT)
View(temperature)
View(wsetT)
westT <- with(temperature, subset(Area=="West", select=October))
westT <- subset(temperature, Area=="West", select=October)
View(westT)
summary(westT)
xmean <- mean(westT$October)
xmean
lcl <- xmean  - qnorm(1 - alpha/2) * sigma/sqrt(n)
lcl
with(temperature, plot(October))
with(westT, plot(October))
order(westT$October)
sortedWest <- westT[order(row.names, October),]
sortedWest <- westT[order(October),]
sortedWest <- westT[order(westT$October),]
plot(October))
plot(sortedWest)
conf <- 0.99
sigma <- 8
n <- 4
xmean <- 101.4
alpha = 1 - conf
lcl <- xmean - 2.576 * sigma/sqrt(4)
ucl <- xmean + 2.576 * sigma/sqrt(4)
result <- list(mean=mean, lcl=lcl, ucl=ucl)
result
result <- list(mean=xmean, lcl=lcl, ucl=ucl)
result
?pnorm
pnorm(-2.1)
pnorm(0.5)
pnorm(0)
View(golub)
n <- length(golub)
xmean <- mean(golub$Value)
sigma <- 0.5
z <- (xmean/(sigma/sqrt(n)))
data(golub)
datasets()
dataset()
data()
data(golub)
URL<-"http://www-genome.wi.mit.edu/mpr/publications/projects/Leukemia/data_set_ALL_AML_train.txt"
golub.all<-read.table(URL,sep="\t",quote="",header=T,row.names=NULL,comment.char="")
golub.gnames<-cbind(dimnames(golub.all)[[1]],as.character(golub.all[,1]),as.character(golub.all[,2]))
golub.cl<-c(rep(1,27),rep(2,11))
golub<-golub.all
golub<-golub[,1+2*(1:38)]
golub<-golub[,c(1:27,33:38,28:32)]
golub<-as.matrix(golub)
# Floor & ceiling
golub[golub<100]<-100
golub[golub>16000]<-16000
# Preliminary selection of genes
tmp1<-apply(golub,1,max)
tmp2<-apply(golub,1,min)
which1<-(1:7129)[(tmp1/tmp2)>5]
which2<-(1:7129)[(tmp1-tmp2)>500]
golub.sub<-intersect(which1,which2)
golub<-golub[golub.sub,]
# Log_10 transformation
golub<-log(golub,10)
# Normalization
golub.expr<-scale(golub,T,T)
dimnames(golub.expr)<-list(NULL,NULL)
#export to multtest
golub<-golub.expr
golub.cl<-c(rep(0,27),rep(1,11))
golub.gnames<-golub.gnames[golub.sub,]
View(golub)
View(golub.expr)
install.package("multtest")
install.packages("multtest")
source("http://bioconductor.org/biocLite.R")
biocLite()
data()
data()
install.package("multtest")
install.packages("multtest")
data(golub)
biocLite()
source("http://bioconductor.org/biocLite.R")
?biocLite
biocLite("multtest")
data()
biocLite("multtest")
source("http://bioconductor.org/biocLite.R")
biocLite("multtest")
data()
library(multtest)
data()
data()
library(multtest)
data()
data(golub)
View(golub)
View(golub.gnames)
golub <- read.table(file = file.choose(), header = 'T')
?read.table
golub <- read.table(file = file.choose(), header = FALSE)
View(golub)
install.packages("ISLR")
library(ISLR)
fix(Hitters)
names(Hitters)
dim(Hitters)
sum(is.na(Hitters$Salary))
Hitters = na.omit(Hitters)
dim(Hitters)
sum(is.na(Hitters))
library(leaps)
install.packages(leaps)
install.packages("leaps")
library(leaps)
regfit.full=regsubsets(Salary~.,Hitters)
summary(regfit.full)
chwd
setwd("/home/sid/Dev/BioMolecularModelBuilding/Resources/")
list.files()
pdb <- csv.read("tabularResultsPDBQuery.csv")
pdb <- read.csv("tabularResultsPDBQuery.csv")
View(pdb)
str(pdb)
pdb$dates <- as.Date(pdb$Rel..Date,"%Y-%m-%d")
View(pdb)
str(pdb)
yead(pdb$dates[1])
year(pdb$dates[1])
require(lubridate)
years <- as.POSIXlt(pdb$dates)
years2 <- years$year
years2
years[1]$year
years[1]
pdb$dates[1]
pdb$dates[1]$year
pdb$dates[1]
years <- as.POSIXlt(pdb$dates) + 1900
years <- as.POSIXlt(pdb$dates)
years2 <- as.POSIXlt(pdb$dates) + 1900
years2
years2$year
years2[1]$year
years <- as.POSIXlt(pdb$dates)$year + 1900
years2
years
barplot(years)
?barplot
table(years)
barplot(table(years))
